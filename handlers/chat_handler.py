# handlers/chat_handler.py
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from services.openai_service import translate_text
import logging
import re

# –°–æ–∑–¥–∞—ë–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
router = Router()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

def is_cyrillic(text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã.
    """
    return bool(re.search('[–∞-—è–ê-–Ø]', text))

@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –∏ —è –ø–µ—Ä–µ–≤–µ–¥—É –µ–≥–æ –¥–ª—è —Ç–µ–±—è.")

@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer("‚ÑπÔ∏è **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:**\n\n"
                         "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.\n"
                         "2Ô∏è‚É£ –Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—é —è–∑—ã–∫ –∏ –ø–µ—Ä–µ–≤–µ–¥—É —Ç–µ–∫—Å—Ç –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π.\n\n"
                         "üõ†Ô∏è **–ü—Ä–∏–º–µ—Ä:**\n"
                         "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \"–ö–∞–∫ –¥–µ–ª–∞?\"\n"
                         "–ë–æ—Ç: \"How are you?\"\n\n"
                         "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \"How are you?\"\n"
                         "–ë–æ—Ç: \"–ö–∞–∫ –¥–µ–ª–∞?\"")

@router.message()
async def handle_message(message: Message):
    user_input = message.text.strip()

    if not user_input:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.")
        return

    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        if is_cyrillic(user_input):
            target_language = '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π'
            detected_lang = 'ru'
        else:
            target_language = '—Ä—É—Å—Å–∫–∏–π'
            detected_lang = 'en'

        logger.info(f"–û–ø—Ä–µ–¥–µ–ª—ë–Ω —è–∑—ã–∫: {detected_lang} –¥–ª—è —Ç–µ–∫—Å—Ç–∞: {user_input}")

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
        translation = await translate_text(user_input, target_language)

        await message.answer(translation)

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
